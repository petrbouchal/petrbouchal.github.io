<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rvest on Petr Bouchal</title>
    <link>https://petrbouchal.xyz/tags/rvest/</link>
    <description>Recent content in rvest on Petr Bouchal</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 26 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://petrbouchal.xyz/tags/rvest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Crawling through a web labyrinth using {rvest}</title>
      <link>https://petrbouchal.xyz/post/rvest-time/</link>
      <pubDate>Tue, 26 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://petrbouchal.xyz/post/rvest-time/</guid>
      <description>
&lt;script src=&#34;https://petrbouchal.xyz/post/rvest-time/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;This is a brief walk through of the session functionality in &lt;a href=&#34;https://rvest.tidyverse.org/&#34;&gt;&lt;code&gt;{rvest}&lt;/code&gt;&lt;/a&gt; as used on a recent project involving data on the web hidden behind multiple layers of forms and file-download malarkey.&lt;/p&gt;
&lt;p&gt;It comes from a recent project where a periodically updated export of an online official database was needed.&lt;/p&gt;
&lt;p&gt;I worked on it as Hadley Wickham was updating rvest for release of version 1.0, so I got to test some new/redesigned features and workflows and report a few minor bugs along the way.&lt;/p&gt;
&lt;p&gt;I ended up using a set of &lt;code&gt;{rvest}&lt;/code&gt; functions for which I have seen relatively little documentation and use in the wild, so I thought it might be worth writing up. (I am not sure how much of the functionality is new or just redesigned.)&lt;/p&gt;
&lt;p&gt;The result forms part of the &lt;a href=&#34;https://petrbouchal.xyz/vsezved&#34;&gt;&lt;code&gt;{vsezved}&lt;/code&gt;&lt;/a&gt; package, which is an R gateway to the public register of schools in the Czech Republic.&lt;/p&gt;
&lt;p&gt;Note: as far as I can tell, this is legitimate use of the data source, but obviously please do not go and bombard the server with hundreds od massive search queries.&lt;/p&gt;
&lt;div id=&#34;the-data-the-website&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The data, the website&lt;/h2&gt;
&lt;p&gt;The data source contains a school register. The data is located behind this &lt;a href=&#34;http://stistko.uiv.cz/registr/vybskolrn.asp&#34;&gt;antique-looking form&lt;/a&gt;. The bit we want - for a Covid-19-related project - is contact information for each of the country’s several thousand primary and secondary education institutions, as well as some metadata about the type of school, who established it etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-path-to-the-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The path to the data&lt;/h2&gt;
&lt;p&gt;The thing we want is not to scrape the massive paginated table we get from the search form, but to download the “Excel” (more on that later) export you can get after you run the search query. Unfortunately that is hidden behind two layers of forms and is itself downloaded by submitting one of four forms in the last layer.&lt;/p&gt;
&lt;p&gt;The whole thing is written in some ASP/.Net tools I do not understand - all I can tell from inspecting the requests in browser developer tools and from trying to replicate those requests in curl, httr and in simple rvest steps is that the whole thing is held together by a bunch of cookies and session logics which the client needs to keep track of and return exactly, otherwise the server throws errors.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-rvest-workflow&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The rvest workflow&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;{rvest}&lt;/code&gt; to the rescue. One set of tools inside {rvest} that I previously ignored is the session-based workflow - which happens to solve exactly this problem. I started playing with it just as Hadley was doing some improvements and refactoring, so here is my understanding of how it works currently (it is now in the &lt;a href=&#34;https://github.com/tidyverse/rvest/&#34;&gt;dev version on Github&lt;/a&gt; but probably soon on CRAN):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(rvest)&lt;/code&gt;&lt;/pre&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Start a session using &lt;code&gt;session()&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sess &amp;lt;- session(&amp;quot;http://stistko.uiv.cz/registr/vybskolrn.asp&amp;quot;)
sess&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;session&amp;gt; http://stistko.uiv.cz/registr/vybskolrn.asp
##   Status: 200
##   Type:   text/html
##   Size:   23117&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is an &lt;code&gt;rvest_session&lt;/code&gt; object but can also be approached as a &lt;code&gt;html_document&lt;/code&gt;. E.g. you can extract a form from it:&lt;/p&gt;
&lt;ol start=&#34;2&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Extract the form&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;form1 &amp;lt;- html_form(sess)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The benefit of having the session object is that you can use it to submit the form, and all the right cookies will be automatically submitted with it.&lt;/p&gt;
&lt;p&gt;Note that we added a user agent header to identify ourselves.&lt;/p&gt;
&lt;ol start=&#34;3&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Fill the form&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But first, we need to set the values in the form - as it turns out, the defaults for this particular form, as seen in the browser, are not actually encoded in the HTML, so even if we want to submit a blank “give me everything” search, we need to manually set the defaults. (The object returned by &lt;code&gt;html_form()&lt;/code&gt; is a list of &lt;code&gt;rvest_form&lt;/code&gt; objects, which we nead to bear in mind when inspecting it.)&lt;/p&gt;
&lt;p&gt;e.g. let’s look at a particular field:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;form1[[1]][[&amp;#39;fields&amp;#39;]][[&amp;#39;uzemi&amp;#39;]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;field&amp;gt; (select) uzemi:&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and see its value (normally that would be the default):&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;form1[[1]][[&amp;#39;fields&amp;#39;]][[&amp;#39;uzemi&amp;#39;]]$value&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## character(0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So to set the values in the form, we need to have a look at what the first option is and set that as the value.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;form1[[1]][[&amp;#39;fields&amp;#39;]][[&amp;#39;uzemi&amp;#39;]][[&amp;#39;options&amp;#39;]][[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;NIC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That turns out to be the case for most of the select fields, so we can set it like so:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;form1set &amp;lt;- html_form_set(form1[[1]], 
                          # set to a small region so we don&amp;#39;t blast the 
                          # server with heavy queries
                          uzemi = &amp;quot;CZ0514&amp;quot;, 
                          # the rest are defaults (&amp;quot;NOTHING&amp;quot;)
                          zrizovatel = &amp;quot;NIC&amp;quot;,
                          organ = &amp;quot;NIC&amp;quot;,
                          typ = &amp;quot;NIC&amp;quot;,
                          jazs = &amp;quot;NIC&amp;quot;,
                          delka = &amp;quot;NIC&amp;quot;,
                          forma = &amp;quot;NIC&amp;quot;,
                          jazob = &amp;quot;NIC&amp;quot;,
                          skupobor = &amp;quot;NIC&amp;quot;,
                          kmobor = &amp;quot;NIC&amp;quot;,
                          obor = &amp;quot;NIC&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34; style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Submit the form, using the session&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;session_after_form1 &amp;lt;- session_submit(sess, form1set, submit = NULL, httr::user_agent(&amp;quot;github.com/petrbouchal&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Submitting with &amp;#39;XX&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;session_after_form1&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;session&amp;gt; http://stistko.uiv.cz/registr/skolyrn.asp
##   Status: 200
##   Type:   text/html
##   Size:   33316&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now if we look at the results page in browser dev tools, we will see that the way to proceed to the export page is to submit another form:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results_forms &amp;lt;- session_after_form1 %&amp;gt;% html_form()
length(results_forms)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 14&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results_forms[1]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## &amp;lt;form&amp;gt; &amp;#39;&amp;lt;unnamed&amp;gt;&amp;#39; (POST http://stistko.uiv.cz/registr/vybskolrn.asp)
##   &amp;lt;field&amp;gt; (submit) AA: Návrat na výběr&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;results_forms[2]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## &amp;lt;form&amp;gt; &amp;#39;&amp;lt;unnamed&amp;gt;&amp;#39; (POST http://stistko.uiv.cz/registr/exportqx.asp)
##   &amp;lt;field&amp;gt; (submit) EX: Export do Excelu&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fourteen forms on a simple results page…&lt;/p&gt;
&lt;p&gt;The text suggests the second form is what we want - it’s a single button, so we submit it. Notice that (a) we use &lt;code&gt;session_submit()&lt;/code&gt; and (b) an object from the previous call is again included in the submit call to maintain the session:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;export_page &amp;lt;- session_submit(session_after_form1, results_forms[[2]], submit = NULL,
                              httr::user_agent(&amp;quot;github.com/petrbouchal&amp;quot;))
export_page&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;session&amp;gt; http://stistko.uiv.cz/registr/exportqx.asp
##   Status: 200
##   Type:   text/html
##   Size:   2782&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looking at this in browser, we find we now face another set of forms which will hopefully give us the coveted excel exports.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;export_forms &amp;lt;- html_form(export_page)
export_forms&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [[1]]
## &amp;lt;form&amp;gt; &amp;#39;&amp;lt;unnamed&amp;gt;&amp;#39; (POST http://stistko.uiv.cz/registr/exportq.asp)
##   &amp;lt;field&amp;gt; (submit) EX: Export adresáře
## 
## [[2]]
## &amp;lt;form&amp;gt; &amp;#39;&amp;lt;unnamed&amp;gt;&amp;#39; (POST http://stistko.uiv.cz/registr/exportqs.asp)
##   &amp;lt;field&amp;gt; (submit) EXX: Export škol
## 
## [[3]]
## &amp;lt;form&amp;gt; &amp;#39;&amp;lt;unnamed&amp;gt;&amp;#39; (POST http://stistko.uiv.cz/registr/exportqm.asp)
##   &amp;lt;field&amp;gt; (submit) EXM: Export škol s mís...
## 
## [[4]]
## &amp;lt;form&amp;gt; &amp;#39;&amp;lt;unnamed&amp;gt;&amp;#39; (POST http://stistko.uiv.cz/registr/exportqo.asp)
##   &amp;lt;field&amp;gt; (submit) EXO: Export škol s obo...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These are exports of different bits of data from the database. Let’s look at the first one:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;export &amp;lt;- session_submit(export_page, export_forms[[1]], submit = NULL,
                         httr::user_agent(&amp;quot;github.com/petrbouchal&amp;quot;))
export&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;lt;session&amp;gt; http://stistko.uiv.cz/registr/exportq.asp
##   Status: 200
##   Type:   application/vnd.ms-excel
##   Size:   55674&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;the-quasi-excel-data-dump&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;The quasi excel data dump&lt;/h2&gt;
&lt;p&gt;This seems to be an excel file of 55 kB - great. What exactly is it?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;export$response$headers$`content-disposition`&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;attachment; filename=Adresar.xls&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An XLS file to be precise. Let’s write it to disk.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;writeBin(export$response$content, &amp;quot;export.xls&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And read it in:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;readxl::read_excel(&amp;quot;export.xls&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error: 
##   filepath: /Users/petr/cpers/petrbouchal.github.io/content/post/2021-01-26-rvesting/export.xls
##   libxls error: Unable to open file&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hmm…what it this?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;readLines(&amp;quot;export.xls&amp;quot;, n = 3)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;&amp;quot;       &amp;quot;&amp;lt;html&amp;gt;&amp;quot; &amp;quot;&amp;lt;head&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Right, so this is actually a HTML file. Is it a table?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stringr::str_sub(readr::read_lines(&amp;quot;export.xls&amp;quot;, n_max = 1, skip = 7), 1, 100)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;&amp;lt;table border=&amp;#39;1&amp;#39;&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;RED_IZO&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;I\xc8O&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Z\xf8izovatel&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;\xdazem\xed&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;Kraj&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s try parsing it then.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tbl &amp;lt;- read_html(&amp;quot;export.xls&amp;quot;) %&amp;gt;% 
  html_table(header = T)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tbl[[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 99 x 27
##    RED_IZO    IČO Zřizovatel Území Kraj  `Správní úřad`   ORP `Plný název`
##      &amp;lt;int&amp;gt;  &amp;lt;int&amp;gt;      &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;          &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;       
##  1  6.00e8 8.55e5          7 CZ05… Libe… B51000          5109 Gymnázium, …
##  2  6.00e8 8.55e5          7 CZ05… Libe… B51000          5109 Střední umě…
##  3  6.00e8 8.56e5          7 CZ05… Libe… B51000          5107 Gymnázium I…
##  4  6.00e8 5.81e5          7 CZ05… Libe… B51000          5109 Střední zdr…
##  5  6.00e8 7.08e7          7 CZ05… Libe… B51000          5107 Základní šk…
##  6  6.00e8 8.55e5          7 CZ05… Libe… B51000          5107 Dětský domo…
##  7  6.00e8 7.09e7          7 CZ05… Libe… B51000          5107 Pedagogicko…
##  8  6.00e8 7.10e7          2 CZ05… Libe… D51040          5104 Mateřská šk…
##  9  6.00e8 7.07e7          2 CZ05… Libe… D51080          5108 Mateřská šk…
## 10  6.00e8 7.27e7          2 CZ05… Libe… D51040          5104 Mateřská šk…
## # … with 89 more rows, and 19 more variables: `Zkrácený název` &amp;lt;chr&amp;gt;,
## #   Ulice &amp;lt;chr&amp;gt;, č.p. &amp;lt;int&amp;gt;, č.or. &amp;lt;lgl&amp;gt;, č.obce &amp;lt;chr&amp;gt;, PSČ &amp;lt;int&amp;gt;, Místo &amp;lt;chr&amp;gt;,
## #   Telefon &amp;lt;chr&amp;gt;, Fax &amp;lt;chr&amp;gt;, `Email 1` &amp;lt;chr&amp;gt;, `Email 2` &amp;lt;chr&amp;gt;, WWW &amp;lt;chr&amp;gt;, `ID
## #   dat. schránky subjektu` &amp;lt;chr&amp;gt;, Ředitel &amp;lt;chr&amp;gt;, X &amp;lt;chr&amp;gt;, `je OVM` &amp;lt;chr&amp;gt;,
## #   ZUJ &amp;lt;int&amp;gt;, `Email zřizovatele` &amp;lt;chr&amp;gt;, `ID dat. schránky zřizovatele` &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There we go - so the &lt;code&gt;{rvest}&lt;/code&gt; machinery turned out to be useful not just for getting through the maze of forms and cookies, but for parsing a HTML table masquerading as an Excel file.&lt;/p&gt;
&lt;p&gt;If you are interested in how this is packaged into a (very early stages) package, take a look at &lt;code&gt;{vsezved}&lt;/code&gt;: &lt;a href=&#34;https://github.com/petrbouchal/vsezved&#34;&gt;code&lt;/a&gt;, &lt;a href=&#34;https://petrbouchal.xyz/vsezved&#34;&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
